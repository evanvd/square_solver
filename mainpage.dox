/**
 * @mainpage Документация решателя квадратных уравнений
 *
 * @tableofcontents
 *
 * @section overview_sec Обзор
 *
 * **Решатель квадратных уравнений** - это программа на языке C для решения
 * квадратных уравнений вида:
 *
 *     ax^2 + bx + c = 0
 *
 * Программа поддерживает все special cases, включая линейные уравнения и
 * вырожденные случаи. Включает comprehensive систему unit-тестирования.
 *
 * @section features_sec Возможности
 *
 * - ✅ Решение полных квадратных уравнений
 * - ✅ Решение линейных уравнений (когда a = 0)
 * - ✅ Обработка вырожденных случаев (0=0, 1=0)
 * - ✅ Цветной вывод в терминал
 * - ✅ Встроенная система unit-тестирования
 * - ✅ Поддержка аргументов командной строки
 * - ✅ Проверка входных данных
 * - ✅ Подробные сообщения об ошибках
 *
 * @section modules_sec Модули программы
 *
 * @subsection solver_module Модуль решения уравнений (solver.h/solver.cpp)
 * - @ref num_root() - Определяет тип уравнения и вызывает соответствующую функцию
 * - @ref solve_linear() - Решает линейные уравнения
 * - @ref solve_quadratic() - Решает квадратные уравнения
 *
 * @subsection io_module Модуль ввода-вывода (IO.h/IO.cpp)
 * - @ref color_printf() - Цветной вывод с форматированием
 * - @ref scan_check() - Ввод и валидация коэффициентов
 * - @ref print_roots() - Вывод результатов решения
 * - @ref search_flag() - Обработка аргументов командной строки
 *
 * @subsection testing_module Модуль тестирования (tests.h/tests.cpp)
 * - @ref run_all_test() - Запуск всех unit-тестов
 * - @ref run_test() - Запуск одного тестового случая
 * - @ref check_case() - Проверка корректности решения
 *
 *
 * @section examples_sec Примеры уравнений
 *
 * <table>
 * <tr><th>Уравнение</th><th>Коэффициенты</th><th>Результат</th></tr>
 * <tr><td>x^2 - 5x + 6 = 0</td><td>1 -5 6</td><td>x1 = 3, x2 = 2</td></tr>
 * <tr><td>2x^2 - 4x + 2 = 0</td><td>2 -4 2</td><td>x = 1</td></tr>
 * <tr><td>6x^2 + 2x + 1 = 0</td><td>6 2 1</td><td>Нет решений</td></tr>
 * <tr><td> 0x + 0 = 0</td><td>0 0 0</td><td>Бесконечно много решений</td></tr>
 * <tr><td> 0x + 1 = 0</td><td>0 0 1</td><td>Нет решений</td></tr>
 * <tr><td> x - 1 = 0</td><td>0 1 -1</td><td>x = 1</td></tr>
 * </table>
 *
 * @section testing_sec Тестирование
 *
 * Программа включает comprehensive набор из 6 unit-тестов:
 *
 * 1. **Квадратное уравнение с двумя корнями**: x^2 - 5x + 6 = 0
 * 2. **Квадратное уравнение с одним корнем**: 2x^2 - 4x + 2 = 0
 * 3. **Квадратное уравнение без корней**: 6x^2 + 2x + 1 = 0
 * 4. **Вырожденный случай (0=0)**: 0x + 0 = 0
 * 5. **Вырожденный случай (1=0)**: 0x + 1 = 0
 * 6. **Линейное уравнение**: x - 1 = 0
 *
 * @section math_sec Математическая основа
 *
 * ### Для квадратных уравнений:
 * Формула решения:
 * ```
 * x = (-b +- sqrt(b^2- 4ac)) / (2a)
 * ```
 *
 * Анализ дискриминанта (D = b^2 - 4ac):
 * - **D > 0**: Два различных действительных корня
 * - **D = 0**: Один корень кратности 2
 * - **D < 0**: Нет действительных корней
 *
 * ### Для линейных уравнений:
 * Формула решения:
 * ```
 * x = -c / b (при b ≠ 0)
 * ```
 *
 * Особые случаи:
 * - **b = 0, c = 0**: Бесконечно много решений
 * - **b = 0, c ≠ 0**: Нет решений
 *
 * @section error_sec Обработка ошибок
 *
 * Программа обрабатывает следующие ошибки:
 * - ❌ Нечисловой ввод коэффициентов
 * - ❌ Бесконечные значения (infinity)
 * - ❌ Нечисловые значения (NaN)
 * - ❌ Лишние символы во вводе
 *
 */
